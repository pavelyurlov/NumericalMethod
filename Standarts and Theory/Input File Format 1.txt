Формат входного файла. Версия 1.
1.	Входной файл представляет из себя валидный файл JSON.
2.	Имя входного файла – input.json
3.	В корне должно быть поле “InputFileFormat”. Значение – число, означающее номер версии формата этого файла.
4.	Входной файл может быть ссылкой на другой входной файл. Для этого в корне файла должно быть поле с именем “InputFileName”. Значение этого поля – строка с полным именем другого входного файла, лежащего в той же папке.
4a.	Если поле с таким именем не единственное, то программа должна об этом сообщить.
4b.	Ситуация зацикливания должна обрабатываться в коде и вызывать завершение с ошибкой.
5.	Входной файл должен содержать все входные данные в корне. Имена полей отвечают названиям входных данных.
6.	Названия входных данных:
6a.	DeathRate1, DeathRate2
6b.	BirthRate1, BirthRate2
6c.	DeathRate1To1, DeathRate1To2, DeathRate2To1, DeathRate2To2
6d.	SigmaBirth1, SigmaBirth2
6e.	SigmaDeath1To1, SigmaDeath1To2, SigmaDeath2To1, SigmaDeath2To2
6f.	NumberOfGridDots
6g.	SizeOfArea
6h.	ClosureConstantAlpha
7.	Помимо входных данных, входной файл должен содержать поля с настройками:
7a.	MaxIterations
7b.	PrintD
7c.	NumberOfKinds
7d.	Dimentions
8.	Поле входных данных может содержать три значения с именами “begin”, “end”, “step”. Значения этих переменных следующие: создаётся массив точек с началом в “begin”, шагом “step” и окончанием в “end” или чуть ранее.
8a.	Количество таких массивов – не более 2-х, а если PrintD == true, то не более 1-го.
9.	Поле данных может содержать три значения с именами “begin”, “end”, “corresponding”. Значение “corresponding” – имя поля данных, которое задано массивом. Создаётся массив от begin до end с тем же количеством элементов, что и в другом поле, но считаются только элементы «на диагонали», то есть 1-й-1-й, 2-й-2-й, 3-й-3-й, и т.д.
